name: 자동 보안 업데이트

on:
  # 매일 자정에 실행
  schedule:
    - cron: '0 0 * * *'
  # 수동 실행 옵션
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  security-events: write

jobs:
  auto-security-update:
    name: 자동 보안 업데이트
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 프로젝트 의존성 설치
        run: npm ci || npm install

      # 보안 취약점 스캔
      - name: 보안 취약점 감사
        id: audit
        run: |
          npm audit --json > npm-audit.json || true
          # 취약점이 있는지 확인
          if grep -q '"vulnerabilities":{}' npm-audit.json || grep -q '"vulnerabilities": {}' npm-audit.json; then
            echo "HAS_VULNERABILITIES=false" >> $GITHUB_ENV
            echo "✅ 취약점이 없습니다."
          else
            echo "HAS_VULNERABILITIES=true" >> $GITHUB_ENV
            echo "⚠️ 취약점이 발견되었습니다."
          fi

      # 취약점이 있을 경우에만 다음 단계 진행
      - name: 보안 패키지 업데이트
        if: env.HAS_VULNERABILITIES == 'true'
        run: |
          echo "🔒 보안 취약점 패키지 업데이트 시작..."
          
          # 1. 자동 업데이트 시도
          npm audit fix --force || true
          
          # 2. axios 업데이트 (SSRF 및 Credential Leakage)
          npm install axios@latest --save || true
          
          # 3. vite 관련 업데이트 (server.fs.deny 우회 취약점)
          npm install vite@latest --save-dev || true
          npm install @vitejs/plugin-react@latest --save-dev || true
          
          # 4. 의존성 정리
          npm dedupe || true
      
      # 변경 사항 확인 및 커밋
      - name: 변경사항 확인
        id: verify-changes
        run: |
          git diff --quiet package.json package-lock.json || echo "CHANGES=true" >> $GITHUB_ENV

      - name: 변경사항 커밋
        if: env.CHANGES == 'true'
        run: |
          # Git 설정
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # 작업 브랜치 생성
          git checkout -b auto-security-update-$(date +%Y%m%d%H%M%S)
          
          # 변경사항 커밋
          git add package.json package-lock.json
          git commit -m "보안: 취약 패키지 자동 업데이트"

      # 테스트 및 빌드
      - name: 테스트 빌드
        if: env.CHANGES == 'true'
        run: |
          npm run build || echo "빌드 경고가 있지만 계속 진행합니다."

      # 자동 PR 생성 및 병합
      - name: PR 생성 및 자동 병합
        if: env.CHANGES == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "보안: 취약 패키지 자동 업데이트"
          branch: auto-security-update
          delete-branch: true
          title: "보안: 취약 패키지 자동 업데이트"
          body: |
            ## 🔒 자동 보안 업데이트
            
            이 PR은 보안 취약점이 있는 패키지를 자동으로 업데이트합니다.
            
            ### 업데이트된 패키지:
            - npm audit 결과에 따른 자동 업데이트
            - axios: SSRF 및 Credential Leakage 취약점 수정
            - vite: server.fs.deny 우회 관련 취약점 수정
            
            이 PR은 자동으로 생성되었으며, 테스트가 통과하면 자동으로 병합됩니다.
          base: master
          labels: security,dependencies,automated-pr
      
      # 자동 병합 활성화
      - name: 자동 병합 활성화
        if: env.CHANGES == 'true'
        run: |
          PR_URL=$(gh pr list --state open --label automated-pr --json url --jq '.[0].url')
          if [ -n "$PR_URL" ]; then
            PR_NUMBER=$(echo $PR_URL | grep -o '[0-9]*$')
            echo "PR #$PR_NUMBER에 자동 병합 활성화"
            gh pr merge $PR_NUMBER --auto --merge
          else
            echo "PR을 찾을 수 없습니다."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 