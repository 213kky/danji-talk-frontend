name: Dependabot 자동 병합

on:
  pull_request:
    branches: ['master', 'develop']

# 워크플로우 간 권한을 제한합니다
permissions:
  pull-requests: write
  contents: write

jobs:
  dependabot-auto-merge:
    name: Dependabot PR 자동 병합
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot 메타데이터 조회
        id: metadata
        uses: dependabot/fetch-metadata@v1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Patch & Minor 업데이트 자동 승인 및 병합
        if: ${{
          steps.metadata.outputs.update-type == 'version-update:semver-patch' || 
          steps.metadata.outputs.update-type == 'version-update:semver-minor'
        }}
        run: |
          gh pr review --approve "$PR_URL"
          
          # 패치 업데이트는 즉시 병합
          if [[ "$UPDATE_TYPE" == "version-update:semver-patch" ]]; then
            gh pr merge --auto --merge "$PR_URL"
          # 마이너 업데이트는 CI가 성공하면 병합
          elif [[ "$UPDATE_TYPE" == "version-update:semver-minor" ]]; then
            gh pr merge --auto --merge "$PR_URL"
          fi
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          UPDATE_TYPE: ${{ steps.metadata.outputs.update-type }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # 보안 업데이트는 특별히 빠르게 처리
      - name: 보안 업데이트 자동 승인 및 병합
        if: ${{ steps.metadata.outputs.security-severity == 'high' || steps.metadata.outputs.security-severity == 'critical' }}
        run: |
          echo "🔐 높은 심각도의 보안 업데이트를 자동으로 병합합니다"
          gh pr review --approve "$PR_URL"
          gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 